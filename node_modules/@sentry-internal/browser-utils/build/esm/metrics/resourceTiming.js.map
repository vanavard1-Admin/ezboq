{"version":3,"file":"resourceTiming.js","sources":["../../../src/metrics/resourceTiming.ts"],"sourcesContent":["import type { SpanAttributes } from '@sentry/core';\nimport { browserPerformanceTimeOrigin } from '@sentry/core';\nimport { extractNetworkProtocol, getBrowserPerformanceAPI } from './utils';\n\nfunction getAbsoluteTime(time: number | undefined): number | undefined {\n  // falsy values should be preserved so that we can later on drop undefined values and\n  // preserve 0 vals for cross-origin resources without proper `Timing-Allow-Origin` header.\n  return time ? ((browserPerformanceTimeOrigin() || performance.timeOrigin) + time) / 1000 : time;\n}\n\n/**\n * Converts a PerformanceResourceTiming entry to span data for the resource span. Most importantly,\n * it converts the timing values from timestamps relative to the `performance.timeOrigin` to absolute timestamps\n * in seconds.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/PerformanceResourceTiming#timestamps\n *\n * @param resourceTiming\n * @returns An array where the first element is the attribute name and the second element is the attribute value.\n */\nexport function resourceTimingToSpanAttributes(resourceTiming: PerformanceResourceTiming): SpanAttributes {\n  const timingSpanData: SpanAttributes = {};\n  // Checking for only `undefined` and `null` is intentional because it's\n  // valid for `nextHopProtocol` to be an empty string.\n  if (resourceTiming.nextHopProtocol != undefined) {\n    const { name, version } = extractNetworkProtocol(resourceTiming.nextHopProtocol);\n    timingSpanData['network.protocol.version'] = version;\n    timingSpanData['network.protocol.name'] = name;\n  }\n\n  if (!(browserPerformanceTimeOrigin() || getBrowserPerformanceAPI()?.timeOrigin)) {\n    return timingSpanData;\n  }\n\n  return dropUndefinedKeysFromObject({\n    ...timingSpanData,\n\n    'http.request.redirect_start': getAbsoluteTime(resourceTiming.redirectStart),\n    'http.request.redirect_end': getAbsoluteTime(resourceTiming.redirectEnd),\n\n    'http.request.worker_start': getAbsoluteTime(resourceTiming.workerStart),\n\n    'http.request.fetch_start': getAbsoluteTime(resourceTiming.fetchStart),\n\n    'http.request.domain_lookup_start': getAbsoluteTime(resourceTiming.domainLookupStart),\n    'http.request.domain_lookup_end': getAbsoluteTime(resourceTiming.domainLookupEnd),\n\n    'http.request.connect_start': getAbsoluteTime(resourceTiming.connectStart),\n    'http.request.secure_connection_start': getAbsoluteTime(resourceTiming.secureConnectionStart),\n    'http.request.connection_end': getAbsoluteTime(resourceTiming.connectEnd),\n\n    'http.request.request_start': getAbsoluteTime(resourceTiming.requestStart),\n\n    'http.request.response_start': getAbsoluteTime(resourceTiming.responseStart),\n    'http.request.response_end': getAbsoluteTime(resourceTiming.responseEnd),\n\n    // For TTFB we actually want the relative time from timeOrigin to responseStart\n    // This way, TTFB always measures the \"first page load\" experience.\n    // see: https://web.dev/articles/ttfb#measure-resource-requests\n    'http.request.time_to_first_byte':\n      resourceTiming.responseStart != null ? resourceTiming.responseStart / 1000 : undefined,\n  });\n}\n\n/**\n * Remove properties with `undefined` as value from an object.\n * In contrast to `dropUndefinedKeys` in core this funciton only works on first-level\n * key-value objects and does not recursively go into object properties or arrays.\n */\nfunction dropUndefinedKeysFromObject<T extends object>(attrs: T): Partial<T> {\n  return Object.fromEntries(Object.entries(attrs).filter(([, value]) => value != null)) as Partial<T>;\n}\n"],"names":[],"mappings":";;;AAIA,SAAS,eAAe,CAAC,IAAI,EAA0C;AACvE;AACA;AACA,EAAE,OAAO,IAAA,GAAO,CAAC,CAAC,4BAA4B,EAAC,IAAK,WAAW,CAAC,UAAU,IAAI,IAAI,IAAI,IAAA,GAAO,IAAI;AACjG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,8BAA8B,CAAC,cAAc,EAA6C;AAC1G,EAAE,MAAM,cAAc,GAAmB,EAAE;AAC3C;AACA;AACA,EAAE,IAAI,cAAc,CAAC,eAAA,IAAmB,SAAS,EAAE;AACnD,IAAI,MAAM,EAAE,IAAI,EAAE,OAAA,EAAQ,GAAI,sBAAsB,CAAC,cAAc,CAAC,eAAe,CAAC;AACpF,IAAI,cAAc,CAAC,0BAA0B,CAAA,GAAI,OAAO;AACxD,IAAI,cAAc,CAAC,uBAAuB,CAAA,GAAI,IAAI;AAClD;;AAEA,EAAE,IAAI,EAAE,4BAA4B,EAAC,IAAK,wBAAwB,EAAE,EAAE,UAAU,CAAC,EAAE;AACnF,IAAI,OAAO,cAAc;AACzB;;AAEA,EAAE,OAAO,2BAA2B,CAAC;AACrC,IAAI,GAAG,cAAc;;AAErB,IAAI,6BAA6B,EAAE,eAAe,CAAC,cAAc,CAAC,aAAa,CAAC;AAChF,IAAI,2BAA2B,EAAE,eAAe,CAAC,cAAc,CAAC,WAAW,CAAC;;AAE5E,IAAI,2BAA2B,EAAE,eAAe,CAAC,cAAc,CAAC,WAAW,CAAC;;AAE5E,IAAI,0BAA0B,EAAE,eAAe,CAAC,cAAc,CAAC,UAAU,CAAC;;AAE1E,IAAI,kCAAkC,EAAE,eAAe,CAAC,cAAc,CAAC,iBAAiB,CAAC;AACzF,IAAI,gCAAgC,EAAE,eAAe,CAAC,cAAc,CAAC,eAAe,CAAC;;AAErF,IAAI,4BAA4B,EAAE,eAAe,CAAC,cAAc,CAAC,YAAY,CAAC;AAC9E,IAAI,sCAAsC,EAAE,eAAe,CAAC,cAAc,CAAC,qBAAqB,CAAC;AACjG,IAAI,6BAA6B,EAAE,eAAe,CAAC,cAAc,CAAC,UAAU,CAAC;;AAE7E,IAAI,4BAA4B,EAAE,eAAe,CAAC,cAAc,CAAC,YAAY,CAAC;;AAE9E,IAAI,6BAA6B,EAAE,eAAe,CAAC,cAAc,CAAC,aAAa,CAAC;AAChF,IAAI,2BAA2B,EAAE,eAAe,CAAC,cAAc,CAAC,WAAW,CAAC;;AAE5E;AACA;AACA;AACA,IAAI,iCAAiC;AACrC,MAAM,cAAc,CAAC,aAAA,IAAiB,IAAA,GAAO,cAAc,CAAC,aAAA,GAAgB,IAAA,GAAO,SAAS;AAC5F,GAAG,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,2BAA2B,CAAmB,KAAK,EAAiB;AAC7E,EAAE,OAAO,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,KAAA,IAAS,IAAI,CAAC,CAAA;AACtF;;;;"}